// ||||||||||||||||||||||||||||||||||||||||
// GENERAL ATTRIBUTE CREATION
// ||||||||||||||||||||||||||||||||||||||||

=make_attribute($attribute, $values)
  @each $value in $values
    .#{$attribute}-#{$value}
      #{$attribute}: #{$value}
      
      
// ||||||||||||||||||||||||||||||||||||||||
// BACKGROUND
// ||||||||||||||||||||||||||||||||||||||||

=background-position($horizontal:left,$vertical:top)
  .background-position-#{$horizontal}-#{$vertical}
    background-position: $horizontal $vertical
    
=linear-gradient($start,$stop,$direction)
  $start_position: ''
  $stop_position: ''
  @if $direction == vertical
    $start_position: top
    $stop_position: bottom
  @if $direction == horizontal
    $start_position: left
    $stop_position: right
  background: #{$start}
  background-image: -moz-linear-gradient(#{$start_position}, #{$start} 0%, #{$stop} 100%)
  background-image: -webkit-linear-gradient(#{$start_position}, #{$start} 0%, #{$stop} 100%)
  background-image: -o-linear-gradient(#{$start_position}, #{$start} 0%, #{$stop} 100%)
  background-image: -ms-linear-gradient(#{$start_position}, #{$start} 0%, #{$stop} 100%)
  background-image: linear-gradient(to #{$stop_position}, #{$start} 0%, #{$stop} 100%)
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start}', endColorstr='#{$stop}', GradientType=0 )
  
=make_gradient($start,$start_value,$direction)
  @for $color_nth from 1 to length($all_colors)
    @if $color_nth != $start
      $stop_color: nth($all_colors,$color_nth)
      .#{$start}-to-#{nth($stop_color,1)}-#{$direction}
        +linear-gradient($start_value,#{nth($stop_color,2)},#{$direction})
      
      
// ||||||||||||||||||||||||||||||||||||||||
// GRID
// ||||||||||||||||||||||||||||||||||||||||
      
=grid_define($columns)
  .column#{$columns},
  .grid#{$columns} > *
    float: left
    margin: 0 0.75%
    width: 100% / $columns - 1.5%
    +mobile
      float: none
      width: 100%
  @if $columns > 2
    @for $offset from 1 through $columns - 1
      .column#{$offset}_#{$columns}
        float: left
        margin: 0 0.75%
        width: 100% / $columns * $offset - 1.5%
        +mobile
          float: none
          width: 100%
      
    
  .column#{$columns}.spaceless,
  .grid#{$columns}.spaceless > *
    margin: 0
    width: 100% / $columns
    
  @if $columns > 2
    @for $offset from 1 through $columns - 1
      .column#{$offset}_#{$columns}.spaceless
        float: left
        margin: 0 0.75%
        width: 100% / $columns * $offset - 1.5%
        +mobile
          float: none
          width: 100%
    
  .grid#{$columns}
    overflow: hidden
      
      
// ||||||||||||||||||||||||||||||||||||||||
// BOX MODEL
// ||||||||||||||||||||||||||||||||||||||||

=border-radius($topleft:0,$topright:$topleft,$bottomright:$topleft,$bottomleft:$topright)
  border-radius: $topleft $topright $bottomright $bottomleft
  -moz-border-radius: $topleft $topright $bottomright $bottomleft
  -webkit-border-radius: $topleft $topright $bottomright $bottomleft
    
=box_style($style,$size)
  @each $side in $sides
    @if $side == all
      .#{$style}-#{$size}
        @if $style == margin or $style == padding
          @if $size == small
            #{$style}: $small_space
          @else if $size == medium
            #{$style}: $medium_space
          @else if $size == large
            #{$style}: $large_space
        @else if $style == border
          @if $size == small
            #{$style}-width: $small_border
            #{$style}-style: solid
          @else if $size == medium
            #{$style}-width: $medium_border
            #{$style}-style: solid
          @else if $size == large
            #{$style}-width: $large_border
            #{$style}-style: solid
          
    @else
      .#{$style}-#{$side}-#{$size}
        @if $style == margin or $style == padding
          @if $size == small
            #{$style}-#{$side}: $small_space
          @else if $size == medium
            #{$style}-#{$side}: $medium_space
          @else if $size == large
            #{$style}-#{$side}: $large_space
        @else if $style == border
          @if $size == small
            #{$style}-#{$side}-width: $small_border
            #{$style}-style: solid
          @else if $size == medium
            #{$style}-#{$side}-width: $medium_border
            #{$style}-style: solid
          @else if $size == large
            #{$style}-#{$side}-width: $large_border
            #{$style}-style: solid
          

// ||||||||||||||||||||||||||||||||||||||||
// POSITION
// ||||||||||||||||||||||||||||||||||||||||   
            
=fixed($name,$top:null,$right:null,$bottom:null,$left:null)
  .#{$name}
    @if top != null
      top: $top
    @if right != null
      right: $right
    @if bottom != null
      bottom: $bottom
    @if left != null
      left: $left
          

// ||||||||||||||||||||||||||||||||||||||||
// TYPOGRAPHY
// |||||||||||||||||||||||||||||||||||||||| 

=letter-spacing($size,$unit:px)
  .letter-spacing-#{$size}
    @if $size == tight
      letter-spacing: #{$tight_letter_spacing}#{$unit}
    @if $size == loose
      letter-spacing: #{$loose_letter_spacing}#{$unit}
          

// ||||||||||||||||||||||||||||||||||||||||
// MEDIA QUERIES
// ||||||||||||||||||||||||||||||||||||||||

=desktop
  @media screen and (min-width: $desktop)
    @content

=tablet
  @media screen and (max-width: $desktop)
    @content

=mobile
  @media screen and (max-width: $mobile)
    @content